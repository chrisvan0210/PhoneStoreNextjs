{"ast":null,"code":"import _regeneratorRuntime from \"/home/runner/work/PhoneStoreNextjs/PhoneStoreNextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/runner/work/PhoneStoreNextjs/PhoneStoreNextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from \"next/router\"; //This function to check WHEN Client request get data to see if they are already login or not \n\nexport function myGetApiRqAuth(_x, _x2) {\n  return _myGetApiRqAuth.apply(this, arguments);\n}\n\nfunction _myGetApiRqAuth() {\n  _myGetApiRqAuth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, ctx) {\n    var _ctx$req;\n\n    var cookie, resp, _ctx$res;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n            _context.next = 3;\n            return fetch(url, {\n              headers: {\n                cookie: cookie\n              }\n            });\n\n          case 3:\n            resp = _context.sent;\n\n            if (!(resp.status === 401 && !ctx.req)) {\n              _context.next = 7;\n              break;\n            }\n\n            // run if on Client side\n            Router.replace('/login');\n            return _context.abrupt(\"return\", {});\n\n          case 7:\n            if (!(resp.status === 401 && ctx.req)) {\n              _context.next = 11;\n              break;\n            }\n\n            // run if on Server side\n            (_ctx$res = ctx.res) === null || _ctx$res === void 0 ? void 0 : _ctx$res.writeHead(302, {\n              Location: 'http://localhost:3000/login'\n            });\n            ctx.res.end();\n            return _context.abrupt(\"return\", {});\n\n          case 11:\n            _context.next = 13;\n            return resp.json();\n\n          case 13:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              res: _context.t0\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _myGetApiRqAuth.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}