{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Router from 'next/router';\nexport default function Peoples({\n  userInfo\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: userInfo.map((user, idx) => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: user.name\n      }, idx);\n    })\n  });\n}\nexport const getServerSideProps = async ctx => {\n  var _ctx$req;\n\n  //******THIS IS SERVER SIDE RENDERING******//\n  // const db = await openDB();\n  // const userInfo = await db.all('select name,email from people')\n  // return { props: { userInfo: userInfo} };\n  //******THIS IS CLIENT SIDE RENDERING******//\n  const cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n  const resp = await fetch('http://localhost:3000/api/peoples', {\n    headers: {\n      cookie: cookie\n    }\n  });\n\n  if (resp.status === 401 && !ctx.req) {\n    // run if on Client side\n    Router.replace('/login');\n    return {\n      props: {\n        userInfo: await resp.json()\n      }\n    };\n  }\n\n  if (resp.status === 401 && ctx.req) {\n    var _ctx$res;\n\n    // run if on Server side\n    (_ctx$res = ctx.res) === null || _ctx$res === void 0 ? void 0 : _ctx$res.writeHead(302, {\n      Location: 'http://localhost:3000/login'\n    });\n    ctx.res.end();\n    return {\n      props: {\n        userInfo: await resp.json()\n      }\n    };\n  }\n\n  return {\n    props: {\n      userInfo: await resp.json()\n    }\n  };\n}; //******SET DELAY LOADING******//\n// await new Promise(delay =>{\n//     setTimeout( delay,2000)\n// })","map":null,"metadata":{},"sourceType":"module"}