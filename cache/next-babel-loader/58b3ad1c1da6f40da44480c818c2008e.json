{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport { openDB } from '../../../api/openDB';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n    flexDirection: \"column\"\n  },\n  phoneContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  },\n  cardWrap: {\n    margin: ' 5px 0',\n    width: \"280px\",\n    \"@media(max-width:1200px)\": {\n      width: \"unset\",\n      flexBasis: \"48%\"\n    },\n    \"@media(max-width:600px)\": {\n      width: \"unset\",\n      flexBasis: \"98%\"\n    }\n  },\n  media: {\n    height: 250,\n    backgroundSize: \"contain\"\n  },\n  padding5: {\n    padding: '5px'\n  },\n  phone__btnActive: {\n    backgroundColor: \"#556cd6\"\n  },\n  wrapBtn: {\n    textAlign: \"center\",\n    margin: \"20px auto\",\n    display: \"flex\",\n    '& button': {\n      width: \"30px\",\n      height: \"30px\",\n      margin: \"0 5px\",\n      cursor: \"pointer\"\n    },\n    '& button:first-child': {\n      width: \"50px\"\n    },\n    '& button:last-child': {\n      width: \"50px\"\n    }\n  }\n});\nexport default function Index({\n  phoneList,\n  currentPageNumber,\n  totalOfPage\n}) {\n  const classes = useStyles();\n  const {\n    0: prev,\n    1: setPrev\n  } = useState(false);\n  const {\n    0: next,\n    1: setNext\n  } = useState(true);\n  const {\n    0: currentStep,\n    1: setCurrentStep\n  } = useState(currentPageNumber);\n  const {\n    0: pagination,\n    1: setPagination\n  } = useState(1); //------ 4 is a number of pages every paginations -------//\n\n  const numberButtons = 4; //Control back and forward page\n\n  useEffect(() => {\n    if (currentPageNumber) {\n      setCurrentStep(currentPageNumber);\n      setPagination(Math.floor((currentPageNumber - 1) / numberButtons) * numberButtons + 1);\n    } else {\n      setCurrentStep(1);\n      setPagination(1);\n    }\n\n    return () => {};\n  }, [currentPageNumber]); // Control show hide previous and next button\n\n  useEffect(() => {\n    if (pagination <= 1) {\n      setPrev(false);\n    } else {\n      setPrev(true);\n    }\n\n    if (pagination + numberButtons > totalOfPage) {\n      setNext(false);\n    } else {\n      setNext(true);\n    }\n\n    return () => {};\n  }, [pagination]);\n\n  const handleClickBtn = id => {\n    setCurrentStep(id + 1);\n  };\n\n  const handlePrevious = () => {\n    if (pagination <= 1) return;\n    console.log(\"fire\");\n    setPagination(pagination - numberButtons);\n    setCurrentStep(pagination - numberButtons);\n  };\n\n  const handleNext = () => {\n    if (pagination + numberButtons > totalOfPage) return;\n    setPagination(pagination + numberButtons);\n    setCurrentStep(pagination + numberButtons);\n  };\n\n  const calcNum = totalOfPage - pagination >= numberButtons ? numberButtons : totalOfPage % numberButtons;\n  const stepArr = Array(calcNum).fill('').map((_, idx) => {\n    return /*#__PURE__*/_jsx(Link, {\n      href: `/phones/${idx + pagination}`,\n      children: /*#__PURE__*/_jsx(\"button\", {\n        onClick: () => handleClickBtn(idx + pagination - 1),\n        className: `${idx + pagination === currentStep ? classes.phone__btnActive : \"\"}`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: idx + pagination\n        })\n      })\n    }, idx);\n  });\n  const renderPhoneCard = phoneList.map((phone, idx) => {\n    return /*#__PURE__*/_jsxs(Card, {\n      className: classes.cardWrap,\n      children: [/*#__PURE__*/_jsxs(CardActionArea, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: classes.padding5,\n          children: phone.brand\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classes.padding5,\n          children: /*#__PURE__*/_jsx(Link, {\n            href: `/phones/details/${phone.id}`,\n            children: /*#__PURE__*/_jsx(CardMedia, {\n              className: classes.media,\n              image: phone.imageUrl,\n              title: phone.model\n            })\n          })\n        }), /*#__PURE__*/_jsxs(CardContent, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: phone.model\n          }), /*#__PURE__*/_jsxs(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: [phone.price, \"$\"]\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(CardActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          size: \"small\",\n          color: \"primary\",\n          children: \"Share\"\n        }), /*#__PURE__*/_jsx(Button, {\n          size: \"small\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsx(Link, {\n            href: `/phones/details/${phone.id}`,\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: \"Detail\"\n            })\n          })\n        })]\n      })]\n    }, idx);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.wrapBtn,\n      children: [/*#__PURE__*/_jsx(Link, {\n        href: `/phones/${pagination - 4}`,\n        children: /*#__PURE__*/_jsx(\"button\", {\n          onClick: handlePrevious,\n          className: prev === true ? 'show' : 'hide',\n          disabled: !prev,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \" Prev \"\n          })\n        })\n      }), stepArr, /*#__PURE__*/_jsx(Link, {\n        href: `/phones/${pagination + 4}`,\n        children: /*#__PURE__*/_jsx(\"button\", {\n          onClick: handleNext,\n          className: next === true ? 'show' : 'hide',\n          disabled: !next,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \" Next \"\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.phoneContainer,\n      children: renderPhoneCard\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.wrapBtn,\n      children: [/*#__PURE__*/_jsx(Link, {\n        href: `/phones/${pagination - 4}`,\n        children: /*#__PURE__*/_jsx(\"button\", {\n          onClick: handlePrevious,\n          className: prev === true ? 'show' : 'hide',\n          disabled: !prev,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \" Prev \"\n          })\n        })\n      }), stepArr, /*#__PURE__*/_jsx(Link, {\n        href: `/phones/${pagination + 4}`,\n        children: /*#__PURE__*/_jsx(\"button\", {\n          onClick: handleNext,\n          className: next === true ? 'show' : 'hide',\n          disabled: !next,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \" Next \"\n          })\n        })\n      })]\n    })]\n  });\n} // Phones.getInitialProps = async (ctx: NextPageContext) => {\n//   const resp = await myGetApiRqAuth(\"http://localhost:3000/api/phonesBrands\", ctx);\n//   return { phoneList: resp.res }\n// }\n\nexport const getStaticProps = async ctx => {\n  var _ctx$params;\n\n  const currentPage = (_ctx$params = ctx.params) === null || _ctx$params === void 0 ? void 0 : _ctx$params.currentPage;\n  const currentPageNumber = +(currentPage || 1);\n  const min = (currentPageNumber - 1) * 4;\n  const max = currentPageNumber * 4;\n  const db = await openDB();\n  const phoneList = await db.all('SELECT * FROM Phone WHERE id > ?  and id <= ?', min, max);\n  const {\n    total\n  } = await db.get('select count(*) as total from phone');\n  const totalOfPage = Math.ceil(total / 4);\n  return {\n    props: {\n      phoneList,\n      currentPageNumber,\n      totalOfPage\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}