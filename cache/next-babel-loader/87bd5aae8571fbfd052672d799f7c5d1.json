{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { openDB } from '../../../../api/openDB';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  },\n  cardWrap: {\n    margin: ' 5px 0',\n    width: \"280px\",\n    \"@media(max-width:1200px)\": {\n      width: \"unset\",\n      flexBasis: \"48%\"\n    },\n    \"@media(max-width:600px)\": {\n      width: \"unset\",\n      flexBasis: \"98%\"\n    }\n  },\n  media: {\n    height: 250,\n    backgroundSize: \"contain\"\n  },\n  padding5: {\n    padding: '5px'\n  }\n});\nexport default function Phones({\n  Phone\n}) {\n  const classes = useStyles();\n  const router = useRouter(); // const handleGoBack = ()=>{\n  //     window.history.back()\n  // }\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      children: \"Loading...................\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxs(Card, {\n      className: classes.cardWrap,\n      children: [/*#__PURE__*/_jsxs(CardActionArea, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: classes.padding5,\n          children: Phone[0].brand\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classes.padding5,\n          children: /*#__PURE__*/_jsx(CardMedia, {\n            className: classes.media,\n            image: Phone[0].imageUrl,\n            title: Phone[0].model\n          })\n        }), /*#__PURE__*/_jsxs(CardContent, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: Phone[0].model\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(CardActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          size: \"small\",\n          color: \"primary\",\n          children: \"Share\"\n        }), /*#__PURE__*/_jsx(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: () => router.back(),\n          children: \"Back\"\n        })]\n      })]\n    })\n  });\n} // Phones.getInitialProps = async (ctx: NextPageContext) => {\n//     const resp = await myGetApiRqAuth(`http://localhost:3000/api/phonesBrands/${ctx.query.id}`, ctx);\n//     return { Phone: resp.res }\n// }\n// Phones.getInitialProps = async (ctx: NextPageContext) => {\n//     console.log(\"id\", ctx.query.id)\n//     const resp = await myGetData(`http://localhost:3000/api/phonesBrands/${ctx.query.id}`);\n//     return { Phone: resp.res }\n// }\n\nexport const getStaticProps = async ctx => {\n  var _ctx$params;\n\n  const id = (_ctx$params = ctx.params) === null || _ctx$params === void 0 ? void 0 : _ctx$params.id;\n  const db = await openDB();\n  const Phone = await db.all('SELECT * FROM Phone where id=?', +id);\n  return {\n    props: {\n      Phone\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const db = await openDB();\n  const allPhones = await db.all('SELECT * FROM Phone ');\n  const paths = allPhones.map(phone => {\n    return {\n      params: {\n        id: phone.id.toString()\n      }\n    };\n  });\n  return {\n    fallback: false,\n    paths: paths // paths:[{params:{id:'1'}},{params: {id:'2'}}]\n\n  };\n};","map":null,"metadata":{},"sourceType":"module"}